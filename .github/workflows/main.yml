# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: build-${{ matrix.os }} ${{ matrix.artifact }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            rids: -r win-x64
            artifact: publish-win-x64
          # - os: windows-latest
          #   rids: -r linux-arm64
          #   artifact: publish-linux-arm64
          - os: macos-latest
            rids: -rids osx-arm64,osx-x64
            artifact: publish-osx-universal
          - os: ubuntu-latest
            rids: -r linux-x64
            artifact: publish-linux-x64
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Setup for MonoGame
      uses: infinitespace-studios/monogame-actions@v1
    - name: Install MonoPack
      run: |
            dotnet tool install MonoPack --create-manifest-if-needed
      shell: bash
    - name: Restore dependencies
      run: dotnet restore
      working-directory: GreedyKid_Desktop/GreedyKid_Desktop
    - name: Restore tools
      run: dotnet tool restore
      working-directory: GreedyKid_Desktop/GreedyKid_Desktop
    - name: Delete ./${{ matrix.artifact }}
      run: rm -Rf ./${{ matrix.artifact }}
      shell: bash
    # - name: Install Rosetta
    #   if: runner.os == 'macOS'
    #   continue-on-error: true
    #   run: |
    #     softwareupdate --install-rosetta --agree-to-license
    #     /usr/bin/pgrep oahd >/dev/null && echo "Rosetta is installed" || echo "Rosetta is not installed"
    - name: Build
      run: |
        echo $DYLD_LIBRARY_PATH
        dotnet build GreedyKid_Desktop/GreedyKid_Desktop/GreedyKid_Desktop.csproj -c Release -v:diag -tl:off
      shell: bash
      env:
        MGFXC_WINE_PATH: ${{ env.WINEPREFIX }}
        DYLD_LIBRARY_PATH: /usr/lib:/usr/local/lib:/opt/homebrew/lib:/usr/local/bin:$DYLD_LIBRARY_PATH
    - name: Package
      run: dotnet monopack -e GreedyKid -p GreedyKid_Desktop/GreedyKid_Desktop/GreedyKid_Desktop.csproj -z -o ./${{ matrix.artifact }} ${{ matrix.rids }} -i GreedyKid_Desktop/GreedyKid_Desktop/Info.plist -c GreedyKid_Desktop/GreedyKid_Desktop/GreedyKid.icns -v
      shell: bash
      env:
        MGFXC_WINE_PATH: ${{ matrix.wineprefix }}
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: ./${{ matrix.artifact }}/*.zip
